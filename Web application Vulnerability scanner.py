import requests
from bs4 import BeautifulSoup

def find_forms(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    return soup.find_all('form')

def submit_form(form, url, payload):
    action = form.get('action')
    method = form.get('method', 'get').lower()
    inputs = form.find_all('input')
    data = {}
    for input_tag in inputs:
        name = input_tag.get('name')
        if name:
            data[name] = payload
    if method == 'post':
        return requests.post(url + action, data=data)
    else:
        return requests.get(url + action, params=data)

def scan_sql_injection(url):
    forms = find_forms(url)
    vulnerable = []
    for form in forms:
        response = submit_form(form, url, "' OR '1'='1")
        if "syntax error" in response.text.lower() or "sql" in response.text.lower():
            vulnerable.append(form)
    return vulnerable

def scan_xss(url):
    forms = find_forms(url)
    vulnerable = []
    for form in forms:
        response = submit_form(form, url, "<script>alert('XSS')</script>")
        if "<script>alert('XSS')</script>" in response.text:
            vulnerable.append(form)
    return vulnerable

if __name__ == "__main__":
    target_url = "http://example.com"
    
    print("Scanning for SQL Injection vulnerabilities...")
    sql_vulnerable_forms = scan_sql_injection(target_url)
    if sql_vulnerable_forms:
        print(f"Found SQL Injection vulnerabilities in {len(sql_vulnerable_forms)} forms.")
    else:
        print("No SQL Injection vulnerabilities found.")

    print("\nScanning for XSS vulnerabilities...")
    xss_vulnerable_forms = scan_xss(target_url)
    if xss_vulnerable_forms:
        print(f"Found XSS vulnerabilities in {len(xss_vulnerable_forms)} forms.")
    else:
        print("No XSS vulnerabilities found.")
